# Etapa 1: Construcción de la aplicación
FROM opensuse/tumbleweed:latest AS builder

# Instalar dependencias necesarias
RUN zypper refresh && zypper install -y go git && zypper clean

# Establecer el directorio de trabajo
WORKDIR /app

# Copiar los archivos go.mod y go.sum
COPY go.mod go.sum ./

# Descargar las dependencias
RUN go mod download

# Copiar el código fuente
COPY . .

# Configurar la arquitectura y compilar la aplicación
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o EduAndTime .


# Etapa 2: Crear la imagen final
FROM alpine:latest

# Instalar certificados para HTTPS
RUN apk add --no-cache ca-certificates libc6-compat

# Crear la carpeta '/imagenesPerfil' en la raíz del sistema de archivos
RUN mkdir /imagenesPerfil

# Copiar el binario desde la etapa de construcción
COPY --from=builder /app/EduAndTime /EduAndTime

# Dar permisos de ejecución al binario en la etapa final
RUN chmod +x /EduAndTime

# Exponer el puerto que usa la aplicación
EXPOSE 8081

# Establecer el comando por defecto
ENTRYPOINT ["/EduAndTime"]
